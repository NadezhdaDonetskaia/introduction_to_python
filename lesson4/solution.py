from icecream import ic

# Задача: 
# Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.


# set1 = {2, 4, 6, 8, 10, 12, 10, 8, 6, 4, 2}
# set2 = {3, 6, 9, 12, 15, 18}

# def matching_numbers():

#     def get_int_in_list(lst):
#         return [int(n) for n in lst]
    
#     n, m = get_int_in_list(input('Введите размер множеств: ').split(' '))
#     set1 = set(get_int_in_list(input('Введите множество 1: ').split(' ')))
#     set2 = set(get_int_in_list(input('Введите множество 2: ').split(' ')))
#     result = set1.intersection(set2)
#     for num in sorted(result):
#         print(num)
    

# ic(matching_numbers())



# Задача: 
# В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только по окружности. 
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. 
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, 
# находясь перед некоторым кустом заданной во входном файле грядки.

shrubs = [0, 4, 6, 8, 10, 12, 10, 8, 6, 4, 2]

def max_count_berries(lst_shrubs):
    result = []
    for i in range(len(lst_shrubs)):
        shrub1 = lst_shrubs[i]
        shrub2 = lst_shrubs[i - 1]
        shrub3 = lst_shrubs[(i + 1) % len(lst_shrubs)]
        result.append(sum([shrub1, shrub2, shrub3]))
    return max(result)

ic(max_count_berries(shrubs))